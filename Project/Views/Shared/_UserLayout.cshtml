<!DOCTYPE html>
<link rel="shortcut icon" type="image/x-icon" href="/favicon.ico" />
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/d3")
    <script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.6/d3.min.js" charset="utf-8"></script>
    <script type="text/javascript">

        var me, friends;
        function drawMyFeelings(myImages, sortby) {
            if (!myImages || !sortby) return;
            $(".emotion-str").html(sortby);
            var personid = myImages.userId;
            var top = sortEmotionsPhotos(myImages.photosEmotions, sortby);
            DrawCircleImage(personid, top.slice(0, 5));
        }

        function draw(topFriendsImages, sortby) {
            if (!topFriendsImages || !sortby) return;
            //console.log(topFriendsImages);
            $(".emotion-str").html(sortby);
       
            for(var v in topFriendsImages) {
                var friendPhotosEmotions = topFriendsImages[v];
                //console.log("friendPhotosEmotions length[" + friendPhotosEmotions.photosEmotions.length + "]");
                //console.log(friendPhotosEmotions);
                if(friendPhotosEmotions.photosEmotions.length > 0) {
                    //console.log("Drawing " + friendPhotosEmotions.userName + "'s top pics");
                    var top = sortEmotionsPhotos(friendPhotosEmotions.photosEmotions, sortby);
                    DrawCircleImage(friendPhotosEmotions.userId, top.slice(0,5));
                }
            }
        }
    function sortEmotionsPhotos(photosEmotions, sortby) {
        if(!sortby)
            sortby = "happiness";

        switch (sortby) {
            case "happiness":
                console.log("sorting by happiness");
                return photosEmotions.sort(function(a, b) { return (a.emotions.happiness < b.emotions.happiness) ? 1 : (a.emotions.happiness > b.emotions.happiness) ? -1 : 0; });
            case "surprised":
                console.log("sorting by surprised");
                return photosEmotions.sort(function(a, b) { return (a.emotions.surprise < b.emotions.surprise) ? 1 : (a.emotions.surprise > b.emotions.surprise) ? -1 : 0; });
            case "neutral":
                console.log("sorting by neutral");
                return photosEmotions.sort(function(a, b) { return (a.emotions.neutral < b.emotions.neutral) ? 1 : (a.emotions.neutral > b.emotions.neutral) ? -1 : 0; });
            case "angry":
                console.log("sorting by angry");
                return photosEmotions.sort(function(a, b) { return (a.emotions.anger < b.emotions.anger) ? 1 : (a.emotions.anger > b.emotions.anger) ? -1 : 0; });
            default:
                console.log("sorting by defualt");
                return photosEmotions.sort(function(a, b) { return (a.emotions.surprise < b.emotions.surprise) ? 1 : (a.emotions.surprise > b.emotions.surprise) ? -1 : 0; });

        }
    }

    function drawAll(emotion) {
        drawMyFeelings(me, emotion);
        draw(friends, emotion);
    }
    $(document).ready(function () {
        console.log("ajax");
        
        $.ajax({
            type: "GET",
            url: "/user/getsessiondata",
            success: function (result) {
                console.log("get user session data : got result from server");
                var data = JSON.parse(result);
                console.log(data);
                me = data;
                drawMyFeelings(data, "happiness");
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        })

        $.ajax({
            type: "GET",
            url: "/user/getdata",
            success: function(result){
                console.log("get friends data : got result from server");
                var data = JSON.parse(result);
                console.log(data);
                friends = data;
                draw(data, "happiness");
            },
            error: function (xhr, ajaxOptions, thrownError) {
            }
        })

        $("a[rel='click-emotions']").click(function(){
            var emotion = $(this).attr('id').split('-')[1];
            console.log(emotion);
            $(".happy-div").empty();
            drawAll(emotion);

        });
    });
</script>
</head>

<body>
    <div id="socie-version" style="display: none;">1.1</div>
    
    @if (ViewBag.emotions == null)
    {
        <aside class="user-aside">
            <div class="side-emotions">
                <a rel="click-emotions" id="emotions-happiness" href="javascript:void(0);"><img src="@Url.Content("~/Content/Images/smilies/Blue.png")" height="50" width="50" class="emotions-click-img" /></a>
            </div>
            <div class="side-emotions">
                <a rel="click-emotions" id="emotions-neutral" href="javascript:void(0);"><img src="@Url.Content("~/Content/Images/smilies/SunGlasses.png")" height="50" width="50" class="emotions-click-img" /></a>
            </div>
            <div class="side-emotions">
                <a rel="click-emotions" id="emotions-surprised" href="javascript:void(0);"><img src="@Url.Content("~/Content/Images/smilies/Surprised.png")" height="50" width="50" class="emotions-click-img" /></a>
            </div>
            <div class="side-emotions">
                <a rel="click-emotions" id="emotions-angry" href="javascript:void(0);"><img src="@Url.Content("~/Content/Images/smilies/Red.png")" height="50" width="50" class="emotions-click-img" /></a>
            </div>
        </aside>
    }
    
        @if (ViewBag.emotions != null)
        {
            int counter = 1;
            <div class="image-aside-main-div">
                <h3>Emotions Found</h3>
                @foreach (var item in ViewBag.emotions)
                {
                    <div class="side-emotions-data">
                        <div class="emotion-data-header">Emotion #@counter</div>
                        <div>happiness @item.happiness.ToString("0.##%")</div>
                        <div>surprise @item.surprise.ToString("0.##%")</div>
                        <div>anger @item.anger.ToString("0.##%")</div>
                        <div>neutral @item.neutral.ToString("0.##%")</div>
                    </div>
                    counter++;
                }
            </div>
        }

                <div class="navbar navbar-inverse navbar-fixed-top">
                    <div class="container">
                        <div class="navbar-header">
                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                                <span class="icon-bar"></span>
                            </button>
                            @Html.ActionLink("Socie", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
                        </div>
                        <div class="navbar-collapse collapse" style="margin-left:50px;">
                            <ul class="nav navbar-nav"></ul>
                            @Html.Partial("_LoginPartial")
                        </div>
                    </div>
                </div>
                <div class="container body-content">
                    <div id="ajax-body">
                        @RenderBody()
                    </div>
                </div>

                @Scripts.Render("~/bundles/jquery")
                @Scripts.Render("~/bundles/bootstrap")
                @RenderSection("scripts", required: false)
</body>
</html>
